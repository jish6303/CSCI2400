   0x08048dd8 <+0>:	push   %ebp
   0x08048dd9 <+1>:	mov    %esp,%ebp
   0x08048ddb <+3>:	sub    $0x28,%esp
=> 0x08048dde <+6>:	lea    -0xc(%ebp),%eax
   0x08048de1 <+9>:	mov    %eax,0xc(%esp)
   0x08048de5 <+13>:	lea    -0x10(%ebp),%eax
   0x08048de8 <+16>:	mov    %eax,0x8(%esp)
   0x08048dec <+20>:	movl   $0x804a693,0x4(%esp)
   0x08048df4 <+28>:	mov    0x8(%ebp),%eax
   0x08048df7 <+31>:	mov    %eax,(%esp)
   0x08048dfa <+34>:	call   0x8048870 <__isoc99_sscanf@plt>
   0x08048dff <+39>:	cmp    $0x1,%eax
   0x08048e02 <+42>:	jg     0x8048e09 <phase_5+49>
   0x08048e04 <+44>:	call   0x80492b3 <explode_bomb>
   0x08048e09 <+49>:	mov    -0x10(%ebp),%eax
   0x08048e0c <+52>:	and    $0xf,%eax
   0x08048e0f <+55>:	mov    %eax,-0x10(%ebp)
   0x08048e12 <+58>:	cmp    $0xf,%eax
   0x08048e15 <+61>:	je     0x8048e3f <phase_5+103>
   0x08048e17 <+63>:	mov    $0x0,%ecx //Cycle
   0x08048e1c <+68>:	mov    $0x0,%edx //Cycle
   0x08048e21 <+73>:	add    $0x1,%edx
   0x08048e24 <+76>:	mov    0x804a420(,%eax,4),%eax //p/x *(int *)(0x804a420)@16, 
							  //{0xa, 0x2, 0xe, 0x7, 0x8, 0xc, 0xf, 0xb, 0x0, 0x4, 0x1, 0xd, 0x3, 0x9, 0x6, 0x5}
   0x08048e2b <+83>:	add    %eax,%ecx
   0x08048e2d <+85>:	cmp    $0xf,%eax
   0x08048e30 <+88>:	jne    0x8048e21 <phase_5+73>
   0x08048e32 <+90>:	mov    %eax,-0x10(%ebp)
   0x08048e35 <+93>:	cmp    $0xf,%edx
   0x08048e38 <+96>:	jne    0x8048e3f <phase_5+103>
   0x08048e3a <+98>:	cmp    -0xc(%ebp),%ecx
   0x08048e3d <+101>:	je     0x8048e44 <phase_5+108>
   0x08048e3f <+103>:	call   0x80492b3 <explode_bomb>
   0x08048e44 <+108>:	leave  
   0x08048e45 <+109>:	ret    
